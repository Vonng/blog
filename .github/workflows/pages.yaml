# .github/workflows/deploy.yml
name: Deploy Hugo site to Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:                      # ① 固定 Hugo 版本 & cache 目录
  HUGO_VERSION: 0.148.2
  HUGO_CACHEDIR: ~/.cache/hugo_cache

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 代码 + 子模块
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # 2. 恢复 resources/ + Hugo 模块缓存
      - name: Restore Hugo cache
        id: hugo-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            resources
            ${{ env.HUGO_CACHEDIR }}
          # key 用内容散列，避免每次 commit 都失效
          key: hugo-${{ runner.os }}-${{ hashFiles('content/**/*', 'static/**/*.{png,jpg,jpeg,webp,gif}', 'config/**/*.toml') }}-v1
          restore-keys: |
            hugo-${{ runner.os }}-

      # 3. 首次构建若没有缓存 → 临时关闭图片优化
      - name: Disable image optimisation (first run only)
        if: steps.hugo-cache.outputs.cache-hit != 'true'
        run: |
          printf "[params]\ndisableImageOptimization = true\ndisableImageOptimizationMD = true\n" > no-img.toml
          echo "HUGO_EXTRA=--config no-img.toml" >> "$GITHUB_ENV"

      # 4. 安装 Go（Blowfish 某些短码依赖）
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      # 5. 安装 Hugo extended
      - uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      # 6. Pages 环境变量（baseURL）
      - id: pages
        uses: actions/configure-pages@v4

      # 7. 构建（带或不带 no-img.toml）
      - name: Build with Hugo
        run: |
          hugo --gc --minify --cacheDir "$HUGO_CACHEDIR" ${HUGO_EXTRA} --baseURL "${{ steps.pages.outputs.base_url }}/"

      # 8. 首次构建后把 resources/ 写回缓存
      - name: Save Hugo cache
        if: steps.hugo-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            resources
            ${{ env.HUGO_CACHEDIR }}
          key: ${{ steps.hugo-cache.outputs.cache-primary-key }}

      # 9. 上传产物
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
